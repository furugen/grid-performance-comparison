{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/ag-grid/ag-grid.component.html","webpack:///./src/app/ag-grid/ag-grid.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/base-grid/base-grid.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/dx-data-gird/dx-data-gird.component.html","webpack:///./src/app/dx-data-gird/dx-data-gird.component.ts","webpack:///./src/app/flex-grid/flex-grid.component.html","webpack:///./src/app/flex-grid/flex-grid.component.ts","webpack:///./src/app/flex-grid2/flex-grid2.component.html","webpack:///./src/app/flex-grid2/flex-grid2.component.ts","webpack:///./src/app/igx-grid/igx-grid.component.html","webpack:///./src/app/igx-grid/igx-grid.component.ts","webpack:///./src/app/igx-grid2/igx-grid2.component.html","webpack:///./src/app/igx-grid2/igx-grid2.component.ts","webpack:///./src/app/kendo-grid/kendo-grid.component.html","webpack:///./src/app/kendo-grid/kendo-grid.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<ag-grid-angular\n  class=\"grid-style ag-theme-balham\"\n  [rowData]=\"data\"\n  [columnDefs]=\"columnDefs\"\n  [enableSorting]=\"true\"\n  [enableFilter]=\"true\"\n>\n</ag-grid-angular>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-ag-grid',\n  templateUrl: './ag-grid.component.html',\n  styleUrls: ['./ag-grid.component.scss']\n})\nexport class AgGridComponent extends BaseGridComponent implements OnInit {\n  columnDefs;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'AgGird / AgGird';\n\n    this.columnDefs = [];\n    this.columns.forEach(column => {\n      this.columnDefs.push({\n        headername: column.field,\n        field: column.field,\n        width: 90\n      });\n    });\n  }\n}\n","<div style=\"font-family: Arial, Helvetica, sans-serif; font-size: 20px\">\n  <div style=\"height: 56px; padding: 8px;\">\n    <a routerLink=\"/\">Home</a> &nbsp;&nbsp;\n    <a routerLink=\"/igx-grid\">igx-grid</a> &nbsp;&nbsp;\n    <a routerLink=\"/flex-grid\">flex-grid</a> &nbsp;&nbsp;\n    <a routerLink=\"/kendo-grid\">kendo-grid</a> &nbsp;&nbsp;\n    <a routerLink=\"/dx-data-grid\">dx-data-grid</a> &nbsp;&nbsp;\n    <a routerLink=\"/ag-grid\">ag-grid</a> &nbsp;&nbsp;\n  </div>\n\n  Rows\n  <select name=\"rows\" #selectRows>\n    <option value=\"10000\" selected=\"selected\">10,000</option>\n    <option value=\"100000\">100,000</option>\n  </select>\n\n  Columns\n  <select #selectColumns>\n    <option value=\"20\" selected=\"selected\">20</option>\n    <option value=\"100\">100</option>\n    <option value=\"200\">200</option>\n  </select>\n  <button (click)=\"onDataRefresh(selectRows.value, selectColumns.value)\">\n    Refresh\n  </button>\n  <hr style=\"width: 100%\" />\n\n  <div *ngIf=\"!currentComponent\">Please select a component.</div>\n  <div *ngIf=\"currentComponent\">\n    <div>\n      <b>{{ currentComponent?.name }} - </b> Loading time:{{\n        currentComponent?.totalTimes\n      }}ms\n    </div>\n  </div>\n</div>\n<router-outlet #outlet (activate)=\"onActivate($event)\"></router-outlet>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  NgZone,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { DataService } from './data.service';\nimport { Router, NavigationStart, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  public name: String = '';\n  public currentComponent: any;\n\n  constructor(\n    private dataService: DataService,\n    private router: Router,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.onDataRefresh(10000, 20);\n  }\n\n  onDataRefresh(rowsCnt, columnsCnt) {\n    const rowsCounter: number = parseInt(rowsCnt, 10);\n    const columnsCounter: number = parseInt(columnsCnt, 10);\n\n    console.log('rows:' + rowsCounter + ' columns:' + columnsCounter);\n\n    const columns = [];\n    // for (let i = 0; i <= 200; i++) {\n    for (let i = 0; i <= columnsCounter; i++) {\n      if (i > 0) {\n        columns.push({ field: 'column' + i.toString(), width: 100 });\n        // width: Math.floor(Math.random() * (250 + 1 - 150)) + 150\n      } else {\n        columns.push({ field: 'id', width: 100 });\n        // hidden: true\n      }\n    }\n    this.dataService.columns = columns;\n\n    const data = [];\n    for (let j = 1; j <= rowsCounter; j++) {\n      const item = {};\n      item['id'] = j;\n      for (let k = 2, len = columns.length; k <= len; k++) {\n        const field = columns[k - 1].field;\n        item[field] = `item${j}-${k}`;\n      }\n      data.push(item);\n    }\n    this.dataService.data = data;\n\n    // nagiate\n    this.currentComponent = null;\n    this.router.navigate(['/']);\n  }\n\n  onActivate(componentRef: any): void {\n    setTimeout(() => {\n      this.currentComponent = componentRef;\n      this.cdr.markForCheck();\n    }, 500);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { IgxGridModule } from 'igniteui-angular';\n\nimport { WjGridModule } from 'wijmo/wijmo.angular2.grid';\nimport { WjGridFilterModule } from 'wijmo/wijmo.angular2.grid.filter';\nimport { WjGridGrouppanelModule } from 'wijmo/wijmo.angular2.grid.grouppanel';\n\nimport { AppComponent } from './app.component';\nimport { IgxGrid1Component } from './igx-grid/igx-grid.component';\nimport { IgxGrid2Component } from './igx-grid2/igx-grid2.component';\nimport { FlexGridComponent } from './flex-grid/flex-grid.component';\nimport { FlexGrid2Component } from './flex-grid2/flex-grid2.component';\nimport { GridModule } from '@progress/kendo-angular-grid';\nimport { KendoGridComponent } from './kendo-grid/kendo-grid.component';\n\nimport {\n  DxDataGridModule,\n  DxBulletModule,\n  DxTemplateModule\n} from 'devextreme-angular';\nimport { DxDataGirdComponent } from './dx-data-gird/dx-data-gird.component';\n\n// AgGrid\nimport { AgGridModule } from 'ag-grid-angular';\nimport { AgGridComponent } from './ag-grid/ag-grid.component';\nimport { BaseGridComponent } from './common/base-grid/base-grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IgxGrid1Component,\n    IgxGrid2Component,\n    FlexGridComponent,\n    FlexGrid2Component,\n    KendoGridComponent,\n    DxDataGirdComponent,\n    AgGridComponent,\n    BaseGridComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(\n      [\n        { path: 'igx-grid', component: IgxGrid1Component },\n        { path: 'flex-grid', component: FlexGridComponent },\n        { path: 'igx-grid2', component: IgxGrid2Component },\n        { path: 'flex-grid2', component: FlexGrid2Component },\n        { path: 'kendo-grid', component: KendoGridComponent },\n        { path: 'dx-data-grid', component: DxDataGirdComponent },\n        { path: 'ag-grid', component: AgGridComponent }\n      ],\n      {\n        enableTracing: true\n      }\n    ),\n    IgxGridModule.forRoot(),\n    WjGridModule,\n    WjGridFilterModule,\n    WjGridGrouppanelModule,\n    // Telerik\n    GridModule,\n    // DevExpress\n    DxDataGridModule,\n    DxBulletModule,\n    DxTemplateModule,\n    // AgGrid\n    AgGridModule.withComponents([])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { DataService } from 'src/app/data.service';\n\n@Component({\n  selector: 'app-base-grid',\n  templateUrl: './base-grid.component.html',\n  styleUrls: ['./base-grid.component.scss']\n})\nexport class BaseGridComponent implements OnInit, AfterViewInit {\n  public name: String;\n  public data: any[];\n  public columns: any[];\n  public startTime: Date;\n  public totalTimes: number;\n\n  constructor(public dataService: DataService) {}\n\n  ngOnInit() {\n    console.log('ngOnInit');\n    this.startTime = new Date();\n\n    this.data = this.dataService.data;\n    this.columns = this.dataService.columns;\n  }\n\n  ngAfterViewInit(): void {\n    console.log('ngAfterViewInit');\n    this.totalTimes = new Date().getTime() - this.startTime.getTime();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  columns: any[];\n  data: any[];\n}\n","<dx-data-grid\n  class=\"grid-style\"\n  [dataSource]=\"data\"\n  [remoteOperations]=\"false\"\n  [allowColumnReordering]=\"true\"\n  [rowAlternationEnabled]=\"true\"\n  [showBorders]=\"true\"\n  [height]=\"1340\"\n  (onContentReady)=\"onContentReady($event)\"\n>\n  <dxi-column\n    *ngFor=\"let column of columns\"\n    [dataField]=\"column.field\"\n    [width]=\"100\"\n  ></dxi-column>\n\n  <dxo-filter-panel [visible]=\"true\"></dxo-filter-panel>\n  <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\n  <dxo-filter-row [visible]=\"true\"></dxo-filter-row>\n\n  <dxo-load-panel [enabled]=\"false\"></dxo-load-panel>\n  <dxo-scrolling mode=\"virtual\"></dxo-scrolling>\n  <dxo-group-panel [visible]=\"true\"></dxo-group-panel>\n  <dxo-grouping [autoExpandAll]=\"false\"></dxo-grouping>\n</dx-data-grid>\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-dx-data-gird',\n  templateUrl: './dx-data-gird.component.html',\n  styleUrls: ['./dx-data-gird.component.scss']\n})\nexport class DxDataGirdComponent extends BaseGridComponent\n  implements OnInit, AfterViewInit {\n  isInitialLoaded: boolean;\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'DevExpress / DxDataGrid';\n    this.isInitialLoaded = true;\n  }\n\n  ngAfterViewInit(): void {\n    console.log('ngAfterViewInit');\n  }\n\n  onContentReady(event: any) {\n    console.log('onContentReady');\n    if (this.isInitialLoaded) {\n      this.totalTimes = new Date().getTime() - this.startTime.getTime();\n    }\n    this.isInitialLoaded = false;\n  }\n}\n","<div style=\"width: 1920px; height: calc(948px - 56px); padding: 8px;\">\n  <wj-group-panel [grid]=\"flex\"\n                  [placeholder]=\"'ここに列をドラッグしてグループを作成します。'\">\n  </wj-group-panel>\n  <wj-flex-grid #flex\n                [itemsSource]=\"data\">\n    <wj-flex-grid-filter [showFilterIcons]=\"true\"\n                         [showSortButtons]=\"true\">\n\n    </wj-flex-grid-filter>\n    <wj-flex-grid-column *ngFor=\"let column of columns\"\n                         [binding]=\"column.field\"\n                         [width]=\"column.width\"\n                         [allowResizing]=\"true\"\n                         [allowSorting]=\"true\"\n                         [allowDragging]=\"true\">\n    </wj-flex-grid-column>\n  </wj-flex-grid>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DataService } from '../data.service';\nimport { WjFlexGrid } from 'wijmo/wijmo.angular2.grid';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-flex-grid',\n  templateUrl: './flex-grid.component.html',\n  styleUrls: ['./flex-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlexGridComponent extends BaseGridComponent implements OnInit {\n  @ViewChild('flex')\n  flexGrid: WjFlexGrid;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'Wisimo / FlexGrid';\n\n    this.flexGrid.rows.defaultSize = 18;\n  }\n}\n","<div style=\"width: 1920px; height: calc(948px - 56px); padding: 8px;\">\n  <wj-group-panel [grid]=\"flex\"\n                  [placeholder]=\"'ここに列をドラッグしてグループを作成します。'\">\n  </wj-group-panel>\n  <wj-flex-grid #flex\n                [itemsSource]=\"data\">\n    <wj-flex-grid-filter [showFilterIcons]=\"true\"\n                         [showSortButtons]=\"true\">\n\n    </wj-flex-grid-filter>\n    <wj-flex-grid-column *ngFor=\"let column of columns\"\n                         [binding]=\"column.field\"\n                         [width]=\"column.width\"\n                         [allowResizing]=\"true\"\n                         [allowSorting]=\"true\"\n                         [allowDragging]=\"true\">\n                         <ng-template wjFlexGridCellTemplate [cellType]=\"'Cell'\" let-item=\"item\">\n                          Test:{{item[column.field]}}\n                       </ng-template>\n    </wj-flex-grid-column>\n  </wj-flex-grid>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DataService } from '../data.service';\nimport { WjFlexGrid } from 'wijmo/wijmo.angular2.grid';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-flex-grid2',\n  templateUrl: './flex-grid2.component.html',\n  styleUrls: ['./flex-grid2.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlexGrid2Component extends BaseGridComponent implements OnInit {\n  @ViewChild('flex')\n  flexGrid: WjFlexGrid;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.name = 'Wisimo / FlexGrid';\n\n    this.flexGrid.rows.defaultSize = 18;\n  }\n}\n","<div style=\"width: 1920px; height: calc(948px - 56px); padding: 8px;\">\n  <igx-grid #grid\n            [data]=\"data\"\n            [primaryKey]=\"'id'\"\n            [rowHeight]=\"18\">\n    <igx-column *ngFor=\"let column of columns;\"\n                [field]=\"column.field\"\n                [header]=\"column.field\"\n                [width]=\"column.width\"\n                [sortable]=\"true\"\n                [filterable]=\"true\"\n                [editable]=\"true\"\n                [resizable]=\"true\"\n                [movable]=\"true\"\n                [groupable]=\"true\">\n    </igx-column>\n  </igx-grid>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  NgZone,\n  AfterViewInit,\n  ViewChild,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { DataService } from '../data.service';\nimport { fromEvent } from 'rxjs';\nimport { IgxGridComponent } from 'igniteui-angular';\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-igx-grid',\n  templateUrl: './igx-grid.component.html',\n  styleUrls: ['./igx-grid.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IgxGrid1Component extends BaseGridComponent implements OnInit {\n  private vScrollParent: HTMLElement;\n  private vTimerId: number;\n  private hScrollParent: HTMLElement;\n  private hTimerId: number;\n\n  @ViewChild('grid')\n  grid: IgxGridComponent;\n\n  constructor(\n    private zone: NgZone,\n    private cdr: ChangeDetectorRef,\n    public dataService: DataService\n  ) {\n    super(dataService);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'Infragistics / IgxGrid';\n  }\n\n  private debounceVScroll = event => {\n    clearTimeout(this.vTimerId);\n\n    event.stopPropagation();\n\n    this.vTimerId = <any>setTimeout(() => {\n      this.vScrollParent.removeEventListener(\n        'scroll',\n        this.debounceVScroll,\n        true\n      );\n      this.triggerVScroll();\n      this.vScrollParent.addEventListener('scroll', this.debounceVScroll, true);\n    }, 200);\n  };\n\n  private triggerVScroll = () => {\n    const vScroll = this.grid.verticalScrollContainer.getVerticalScroll() as HTMLElement;\n    const event = document.createEvent('Event');\n    event.initEvent('scroll', true, true);\n    vScroll.dispatchEvent(event);\n  };\n\n  private debounceHScroll = event => {\n    clearTimeout(this.hTimerId);\n\n    event.stopPropagation();\n\n    this.hTimerId = <any>setTimeout(() => {\n      this.hScrollParent.removeEventListener(\n        'scroll',\n        this.debounceHScroll,\n        true\n      );\n      this.triggerHScroll();\n      this.hScrollParent.addEventListener('scroll', this.debounceHScroll, true);\n    }, 50);\n  };\n\n  private triggerHScroll = () => {\n    const hScroll = this.grid.parentVirtDir.getHorizontalScroll() as HTMLElement;\n    const event = document.createEvent('Event');\n    event.initEvent('scroll', true, true);\n    hScroll.dispatchEvent(event);\n  };\n}\n","<div style=\"width: 100vw; height: calc(100vh - 56px); padding: 8px;\">\n  <ng-template #remoteDataLoadingLarge>\n    <div class=\"remote-data-loading-template-large\"></div>\n  </ng-template>\n  <ng-template #remoteDataLoadingMedium>\n      <div class=\"remote-data-loading-template-medium\"></div>\n  </ng-template>\n  <ng-template #remoteDataLoadingSmall>\n      <div class=\"remote-data-loading-template-small\"></div>\n  </ng-template>\n  <igx-grid #grid\n            [data]=\"chunkData | async\"\n            [primaryKey]=\"'id'\"\n            [height]=\"'800px'\"\n            [rowHeight]=\"18\"\n            (onDataPreLoad)=\"dataProcess()\">\n    <igx-column *ngFor=\"let column of columns;\"\n                [field]=\"column.field\"\n                [header]=\"column.field\"\n                [width]=\"column.width\"\n                [sortable]=\"true\"\n                [filterable]=\"true\"\n                [editable]=\"true\"\n                [resizable]=\"true\"\n                [movable]=\"true\"\n                [groupable]=\"true\">\n      <ng-template igxCellEditor\n                   let-value>\n        <input class=\"editor\"\n               type=\"text\"\n               [value]=\"value\">\n      </ng-template>\n      <ng-template let-value\n                   igxCell>\n        <div class=\"igx-grid__td-text\">Test:{{value}}</div>\n      </ng-template>\n    </igx-column>\n  </igx-grid>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  NgZone,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n  TemplateRef\n} from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Observable, BehaviorSubject, Subscription, of } from 'rxjs';\nimport { debounceTime, mapTo, tap } from 'rxjs/operators';\nimport {\n  IgxGridComponent,\n  IForOfState,\n  IgxColumnComponent\n} from 'igniteui-angular';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-igx-grid2',\n  templateUrl: './igx-grid2.component.html',\n  styleUrls: ['./igx-grid2.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IgxGrid2Component extends BaseGridComponent\n  implements OnInit, AfterViewInit {\n  data: any[];\n  _chunkData: BehaviorSubject<any[]>;\n  chunkData: Observable<any[]>;\n\n  columns: any[];\n\n  @ViewChild('grid')\n  grid: IgxGridComponent;\n\n  @ViewChild('remoteDataLoadingLarge', { read: TemplateRef })\n  protected remoteDataLoadingLargeTemplate: TemplateRef<any>;\n  @ViewChild('remoteDataLoadingMedium', { read: TemplateRef })\n  protected remoteDataLoadingMediumTemplate: TemplateRef<any>;\n  @ViewChild('remoteDataLoadingSmall', { read: TemplateRef })\n  protected remoteDataLoadingSmallTemplate: TemplateRef<any>;\n\n  private prevRequest: Subscription;\n  private timer: number;\n\n  private columnCellCustomTemplates: Map<IgxColumnComponent, TemplateRef<any>>;\n  private isColumnCellTemplateReset = false;\n\n  constructor(\n    private zone: NgZone,\n    private cdr: ChangeDetectorRef,\n    public dataService: DataService\n  ) {\n    super(dataService);\n    // this.zone.onMicrotaskEmpty.subscribe(() => console.log('change detection'));\n    this._chunkData = new BehaviorSubject<any[]>([]);\n    this.chunkData = this._chunkData.asObservable();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'Infragistics / IgxGrid';\n\n    this.columnCellCustomTemplates = new Map<\n      IgxColumnComponent,\n      TemplateRef<any>\n    >();\n  }\n\n  ngAfterViewInit(): void {\n    this.grid.totalItemCount = this.data.length;\n    this.getChunkData(this.grid.virtualizationState).subscribe(data => {\n      // this.grid.totalItemCount = data.length;\n      this._chunkData.next(data);\n      this.cdr.detectChanges();\n    });\n    this.cdr.detectChanges();\n    // this.grid.onDataPreLoad\n    //   .asObservable()\n    //   .pipe(\n    //     debounceTime(100),\n    //     mapTo(this.grid.virtualizationState),\n    //   )\n    //   .subscribe(state => {\n    //     this.grid.totalItemCount = this.data.length;\n    //     this._chunkData.next(this.getChunkData(state));\n\n    //     if (this.isColumnCellTemplateReset) {\n    //       let oldTemplate;\n    //       const columnStartIndex = this.grid.headerContainer.state.startIndex;\n    //       const columnEndIndex = columnStartIndex + this.grid.headerContainer.state.chunkSize;\n    //       const visibleColumns = this.grid.columns.filter((column, index) => columnStartIndex <= index && index <= columnEndIndex);\n    //       visibleColumns.forEach((column: IgxColumnComponent) => {\n    //         oldTemplate = this.columnCellCustomTemplates.get(column);\n    //         column.bodyTemplate = oldTemplate;\n    //       });\n    //       this.columnCellCustomTemplates.clear();\n    //       this.isColumnCellTemplateReset = false;\n    //     }\n    //     this.cdr.detectChanges();\n    //   });\n\n    // this.grid.totalItemCount = this.data.length;\n    // this._chunkData.next(this.getChunkData(this.grid.virtualizationState));\n    // this.cdr.detectChanges();\n    super.ngAfterViewInit();\n  }\n\n  private getDataLoadingTemplate(): TemplateRef<any> {\n    const val = Math.floor(Math.random() * 3) + 1;\n\n    switch (val) {\n      case 1:\n        return this.remoteDataLoadingLargeTemplate;\n      case 2:\n        return this.remoteDataLoadingMediumTemplate;\n      case 3:\n        return this.remoteDataLoadingSmallTemplate;\n    }\n  }\n\n  private getChunkData(state: IForOfState): Observable<any[]> {\n    const startIndex = state.startIndex;\n    // const endIndex = startIndex + state.chunkSize;\n    const endIndex = startIndex + 43;\n    return of(\n      this.data.filter(\n        (item, index) => startIndex <= index && index <= endIndex\n      )\n    );\n  }\n\n  dataProcess(): void {\n    if (this.prevRequest) {\n      this.prevRequest.unsubscribe();\n    }\n\n    if (!this.isColumnCellTemplateReset) {\n      if (this.grid.columns.length > 0) {\n        const columnStartIndex = this.grid.headerContainer.state.startIndex;\n        const columnEndIndex =\n          columnStartIndex + this.grid.headerContainer.state.chunkSize;\n        const visibleColumns = this.grid.columns.filter(\n          (column, index) =>\n            columnStartIndex <= index && index <= columnEndIndex\n        );\n        visibleColumns.forEach((column: IgxColumnComponent) => {\n          if (column.bodyTemplate && !this.isColumnCellTemplateReset) {\n            this.columnCellCustomTemplates.set(column, column.bodyTemplate);\n          }\n\n          column.bodyTemplate = this.getDataLoadingTemplate();\n        });\n\n        // this.cdr.detectChanges();\n        this.isColumnCellTemplateReset = true;\n      }\n    }\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    this.cdr.detach();\n    this.timer = <any>setTimeout(() => {\n      this.prevRequest = this.getChunkData(\n        this.grid.virtualizationState\n      ).subscribe(data => {\n        console.log('getChunkData');\n        this.grid.totalItemCount = this.data.length;\n        this._chunkData.next(data);\n\n        if (this.isColumnCellTemplateReset) {\n          let oldTemplate;\n          const columnStartIndex = this.grid.headerContainer.state.startIndex;\n          const columnEndIndex =\n            columnStartIndex + this.grid.headerContainer.state.chunkSize;\n          const visibleColumns = this.grid.columns.filter(\n            (column, index) =>\n              columnStartIndex <= index && index <= columnEndIndex\n          );\n          visibleColumns.forEach((column: IgxColumnComponent) => {\n            oldTemplate = this.columnCellCustomTemplates.get(column);\n            column.bodyTemplate = oldTemplate;\n          });\n          this.columnCellCustomTemplates.clear();\n          this.isColumnCellTemplateReset = false;\n        }\n        // this.cdr.detectChanges();\n        this.cdr.reattach();\n      });\n    }, 500);\n  }\n}\n","<div style=\"width: 2920px; height: calc(948px - 56px); padding: 8px;\">\n  <kendo-grid\n    [data]=\"gridView\"\n    [skip]=\"skip\"\n    [pageSize]=\"pageSize\"\n    [scrollable]=\"'virtual'\"\n    [groupable]=\"true\"\n    [rowHeight]=\"25\"\n    [height]=\"1480\"\n    filterable=\"menu\"\n    [sortable]=\"{\n      allowUnsort: true\n    }\"\n    (pageChange)=\"pageChange($event)\"\n  >\n    <kendo-grid-column\n      *ngFor=\"let column of columns\"\n      [field]=\"column.field\"\n      [width]=\"50\"\n    >\n    </kendo-grid-column>\n  </kendo-grid>\n</div>\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { GridDataResult, PageChangeEvent } from '@progress/kendo-angular-grid';\nimport { BaseGridComponent } from '../common/base-grid/base-grid.component';\n\n@Component({\n  selector: 'app-kendo-grid',\n  templateUrl: './kendo-grid.component.html',\n  styleUrls: ['./kendo-grid.component.scss']\n})\nexport class KendoGridComponent extends BaseGridComponent implements OnInit {\n  public gridView: GridDataResult;\n  public pageSize = 100;\n  public skip = 0;\n  public view = new Array(this.pageSize).fill({}).map(x => ({}));\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.name = 'Telerik / KendoGrid';\n    this.loadProducts();\n  }\n\n  public pageChange(event: PageChangeEvent): void {\n    this.skip = event.skip;\n    this.loadProducts();\n  }\n\n  private loadProducts(): void {\n    const currentView = this.data.slice(this.skip, this.skip + this.pageSize);\n\n    const removeCount = this.view.length - currentView.length;\n\n    if (removeCount > 0) {\n      this.view.splice(currentView.length - 1, removeCount);\n    }\n\n    currentView.forEach((item, index) => {\n      if (!this.view[index]) {\n        this.view[index] = {};\n      }\n      Object.assign(this.view[index], item);\n    });\n\n    this.gridView = {\n      data: this.view,\n      total: this.data.length\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}